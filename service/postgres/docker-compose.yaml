services:
  postgres:
    image: timescale/timescaledb-ha:pg16
    restart: unless-stopped
    container_name: postgres
    ports:
      - "0.0.0.0:5228:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ${CONFIG_BASE_PATH}/service/postgres/init:/docker-entrypoint-initdb.d
      - ${CONFIG_BASE_PATH}/service/postgres/init/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - ${CONFIG_BASE_PATH}/service/postgres/secret/postgres-secret.env
      - ${CONFIG_BASE_PATH}/service/postgres/postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - service_postgres_network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.16.0
    restart: unless-stopped
    container_name: postgres-exporter
    ports:
      - "127.0.0.1::9187"
    depends_on:
      - postgres
    environment:
      - DATA_SOURCE_URI=postgresql://monitoring:monitoring_password@postgres:5432/
      - DATA_SOURCE_NAME=dbname=postgres user=monitoring password=monitoring_password host=postgres sslmode=disable
      - PG_EXPORTER_AUTO_DISCOVER_DATABASES=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --quiet http://localhost:9187/metrics || exit 1" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - service_postgres_network

volumes:
  postgres_data:
    driver: local

networks:
  service_postgres_network:
    external: true

